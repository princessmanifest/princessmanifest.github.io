document.addEventListener('DOMContentLoaded', function() {
    // Path to the JSON file
    const jsonUrl = 'haunted_objects_chart.json';
    
    // Load the JSON data
    fetch(jsonUrl)
        .then(response => {
            if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.status}`);
            }
            return response.json();
        })
        .then(chartData => {
            // Create the plot using Plotly
            const chartElement = document.getElementById('chart');
            Plotly.newPlot('chart', chartData.data, chartData.layout, {responsive: true});
            
            // Add a legend click handler to filter data
            chartElement.on('plotly_legendclick', function(eventData) {
                // Get the color that was clicked
                const clickedColor = eventData.data[0].marker.color[eventData.curveNumber];
                
                // Toggle visibility of bars with that color
                const update = {
                    visible: chartData.data[0].marker.color.map(color => color === clickedColor ? 'legendonly' : true)
                };
                
                Plotly.update('chart', update, {}, [0]);
                
                // Prevent the default behavior (legend item toggling)
                return false;
            });
            
            // Add resize handler for responsiveness
            window.addEventListener('resize', function() {
                Plotly.Plots.resize('chart');
            });
            
            // Add custom hover behavior
            chartElement.on('plotly_hover', function(eventData) {
                // Custom hover behavior can be added here if needed
            });
            
            // Add custom click behavior
            chartElement.on('plotly_click', function(eventData) {
                // Get the point that was clicked
                const pointIndex = eventData.points[0].pointIndex;
                const objectName = chartData.data[0].x[pointIndex];
                const hauntedScore = chartData.data[0].y[pointIndex];
                
                console.log(`Clicked on ${objectName} with haunted score ${hauntedScore}`);
                // You could add more interactivity here, like showing additional details
            });
        })
        .catch(error => {
            console.error('Error loading the visualization:', error);
            document.getElementById('chart').innerHTML = `
                <div style="text-align: center; padding: 50px; color: #d9534f;">
                    <h3>Error Loading Visualization</h3>
                    <p>${error.message}</p>
                    <p>Please check that the JSON file is correctly formatted and accessible.</p>
                </div>
            `;
        });
});
